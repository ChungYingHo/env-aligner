"use strict";var e=require("fs"),r=require("path"),s=require("dotenv"),n=require("chalk");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o,t,a=i(e),l=i(r),c=i(s),u=i(n);function d(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var h=d(function(){if(t)return o;t=1;const e=a.default,r=l.default,s=c.default,n=u.default,i=process.cwd(),d={schemaName:".env.example",envName:".env"},h={isCheckMissing:!0,isCheckEmptyValue:!0,isCheckExtra:!0},f=r=>{const i=e.readFileSync(r,"utf8"),o=s.parse(i);return o||(console.error(n.red.inverse(`\nFailed to parse ${r}`)),process.exit(1)),o},m=async(s=i,o=d,t=h)=>{"use default"===s&&(s=i);try{if(!(await e.promises.stat(s)).isDirectory())throw new Error(`${s} is not a valid directory`)}catch(e){console.error(n.red(`\nError: ${s} does not exist or is not accessible.`)),process.exit(1)}const{schemaName:a,envName:l}=o,c=await e.promises.readdir(s,{withFileTypes:!0});await Promise.all(c.map((async i=>{const c=r.join(s,i.name);if(i.isDirectory()&&"node_modules"!==i.name&&"dist"!==i.name)await m(c,o,t);else if(i.isFile()&&i.name===a){const i=r.join(s,l);try{await e.promises.stat(i),((e,s,i)=>{const{isCheckMissing:o,isCheckEmptyValue:t,isCheckDuplicate:a,isCheckExtra:l}=i;o||t||a||l||console.log(n.hex("#ff69b4").inverse("You have disabled all checks, nothing to do."));const c=f(e),u=f(s),d=Object.keys(c),h=Object.keys(u),m=o?d.filter((e=>!h.includes(e))):[],p=t?d.filter((e=>c[e]&&!u[e]&&!m.includes(e))):[],v=l?h.filter((e=>!d.includes(e))):[],y=r.dirname(s);m.length>0&&(console.error(n.red.inverse(`\nMissing variables in ${y}`)),console.log(n.red(`${m.join("、")}`))),p.length>0&&(console.error(n.hex("#FFA500").inverse(`\nEmpty value variables in ${y}`)),console.log(n.hex("#FFA500")(`${p.join("、")}`))),v.length>0&&(console.error(n.blue.inverse(`\nExtra variables in ${y}`)),console.log(n.blue(`${v.join("、")}`))),m.length>0||p.length>0?process.exit(1):console.log(n.green.inverse(`\nAll variables in ${y} are correct!`))})(c,i,t)}catch(e){console.warn(n.yellow(`\nNo matching env file found for ${c}`))}}})))};return o=m}());module.exports=h;
//# sourceMappingURL=index.min.js.map
